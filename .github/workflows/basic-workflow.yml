name: SimplifyQA Pipeline Executor Workflow

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: ['closed']
  workflow_dispatch:
    inputs:
      runner:
        description: 'Select Runner'
        required: true
        default: 'ubuntu-latest'
        type: choice
        options:
          - ubuntu-latest
          - self-hosted

jobs:
  fetch:
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.GIT_USERNAME }}/${{ vars.GIT_REPO_NAME }}
          token: ${{ secrets.REPO_TOKEN }}
      - name: Upload build artifacts
        id: upload-artifact-step
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: build-artifacts
          path: .
          retention-days: 90
          compression-level: 9
          overwrite: false
      - name: Output artifact ID
        run: echo 'Artifact ID is ${{ steps.upload-artifact-step.outputs.artifact-id }}'

  build:
    needs: fetch
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          github-token: ${{ secrets.REPO_TOKEN }}
          path: .
      - name: Build using NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  deploy:
    needs: build
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          github-token: ${{ secrets.REPO_TOKEN }}
          path: .
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_IMAGE_NAME }}:latest
